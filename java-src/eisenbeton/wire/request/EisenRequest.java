// automatically generated by the FlatBuffers compiler, do not modify

package eisenbeton.wire.request;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class EisenRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static EisenRequest getRootAsEisenRequest(ByteBuffer _bb) { return getRootAsEisenRequest(_bb, new EisenRequest()); }
  public static EisenRequest getRootAsEisenRequest(ByteBuffer _bb, EisenRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public EisenRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String uri() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer uriAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer uriInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String path() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer pathAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer pathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String method() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer methodAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer methodInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String contentType() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer contentTypeAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer contentTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public int content(int j) { int o = __offset(12); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int contentLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector contentVector() { return contentVector(new ByteVector()); }
  public ByteVector contentVector(ByteVector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer contentAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer contentInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }

  public static int createEisenRequest(FlatBufferBuilder builder,
      int uriOffset,
      int pathOffset,
      int methodOffset,
      int content_typeOffset,
      int contentOffset) {
    builder.startTable(5);
    EisenRequest.addContent(builder, contentOffset);
    EisenRequest.addContentType(builder, content_typeOffset);
    EisenRequest.addMethod(builder, methodOffset);
    EisenRequest.addPath(builder, pathOffset);
    EisenRequest.addUri(builder, uriOffset);
    return EisenRequest.endEisenRequest(builder);
  }

  public static void startEisenRequest(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addUri(FlatBufferBuilder builder, int uriOffset) { builder.addOffset(0, uriOffset, 0); }
  public static void addPath(FlatBufferBuilder builder, int pathOffset) { builder.addOffset(1, pathOffset, 0); }
  public static void addMethod(FlatBufferBuilder builder, int methodOffset) { builder.addOffset(2, methodOffset, 0); }
  public static void addContentType(FlatBufferBuilder builder, int contentTypeOffset) { builder.addOffset(3, contentTypeOffset, 0); }
  public static void addContent(FlatBufferBuilder builder, int contentOffset) { builder.addOffset(4, contentOffset, 0); }
  public static int createContentVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createContentVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startContentVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endEisenRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishEisenRequestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedEisenRequestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public EisenRequest get(int j) { return get(new EisenRequest(), j); }
    public EisenRequest get(EisenRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

